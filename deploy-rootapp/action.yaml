name: 'Deploy Rootapp'
description: 'Installs the Rootapp that acts as umbrella for all microservice deployments'

inputs:
  environment:
    description: 'Environment'
    required: true
  project:
    description: 'Project Name'
    required: true
  gitUrl:
    description: 'Git URL'
    required: true
  gitUsername:
    description: 'Git Username'
    required: true
  gitPassword:
    description: 'Git PAT'
    required: true
  registryUrl:
    description: 'Registry URL'
    required: true
  awsAccessKeyId:
    description: 'AWS Access Key Id'
    required: true
  awsSecretAccessKey:
    description: 'AWS Secret Access Key'
    required: true
  awsRegion:
    description: 'AWS Region'
    required: true
  kubeConfig:
    description: 'Kubernetes configuration secret'
    required: true
  rootappChartVersion:
    description: 'Rootapp Chart Version'
    default: '1.0.0'

runs:
  using: 'composite'
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.awsAccessKeyId }}
        aws-secret-access-key: ${{ inputs.awsSecretAccessKey }}
        aws-region: ${{ inputs.awsRegion }}

    - name: Set up Helm
      uses: azure/setup-helm@v1
      with:
        version: '3.13.2'

    - name: Template values file
      run: |
        mkdir -p ${{ github.workspace }}/${{ inputs.environment }}
        cat <<EOF > ${{ github.workspace }}/${{ inputs.environment }}/rootapp.yaml
        
        repositories:
          ${{ inputs.project }}:
            type: https
            url: ${{ inputs.gitUrl }}
            username: ${{ inputs.gitUsername }}
            password: ${{ inputs.gitPassword }}
            extra_args:
              type: "git"
        EOF
      shell: bash

    - name: Deploy Rootapp Chart
      run: |
        echo "${{ inputs.kubeConfig }}" > kubeconfig.yml
        helm upgrade ${{ inputs.project }}-rootapp oci://${{ inputs.registryUrl }}/devtools/argo-rootapp \
          --install \
          --kubeconfig kubeconfig.yml \
          --version ${{ inputs.rootappChartVersion }} \
          --values ${{ github.workspace }}/${{ inputs.environment }}/rootapp.yaml \
          --namespace argocd \
          --insecure-skip-tls-verify
      shell: bash
      env:
        HELM_MAX_HISTORY: '5'
